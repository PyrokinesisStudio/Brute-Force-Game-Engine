# This script tries to find the Brute Force Engine.
#
# On windows the paths should be set manually.
#
# The following variables will be set:
#
#  BFG_FOUND
#  BFG_INCLUDE_DIR
#  BFG_LIBRARIES
#
# You should link to BFG_LIBRARIES.
#
# BFG_ROOT - Can be set to Bfg install path or Windows build path.

MACRO (_FIND_BFG_LIBRARY _libpath)
	FIND_LIBRARY (${_libpath}
		NAMES
			${ARGN}
		PATHS
			/usr/lib
			/usr/local/lib
			${BFG_ROOT}/lib
		PATH_SUFFIXES lib
	)
	MARK_AS_ADVANCED(${_libpath})
ENDMACRO ()

IF (BFG_INCLUDE_DIR AND BFG_LIBRARIES)
	SET (BFG_FOUND TRUE)
ELSE ()
	FIND_PATH (BFG_INCLUDE_DIR "Core/Math.h"
		/usr/include/bfg/
		/usr/local/bfg/
		${BFG_ROOT}/include/bfg
	)

	_FIND_BFG_LIBRARY (BFG_AUDIO_LIBRARY            bfgAudio)
	_FIND_BFG_LIBRARY (BFG_AUDIO_LIBRARY_DEBUG      bfgAudio_d)
	_FIND_BFG_LIBRARY (BFG_BASE_LIBRARY             bfgBase)
	_FIND_BFG_LIBRARY (BFG_BASE_LIBRARY_DEBUG       bfgBase_d)
	_FIND_BFG_LIBRARY (BFG_CONTROLLER_LIBRARY       bfgController)
	_FIND_BFG_LIBRARY (BFG_CONTROLLER_LIBRARY_DEBUG bfgController_d)
	_FIND_BFG_LIBRARY (BFG_CORE_LIBRARY             bfgCore)
	_FIND_BFG_LIBRARY (BFG_CORE_LIBRARY_DEBUG       bfgCore_d)
	_FIND_BFG_LIBRARY (BFG_EVENTCORE_LIBRARY        bfgEventCore)
	_FIND_BFG_LIBRARY (BFG_EVENTCORE_LIBRARY_DEBUG  bfgEventCore_d)
	_FIND_BFG_LIBRARY (BFG_MODEL_LIBRARY            bfgModel)
	_FIND_BFG_LIBRARY (BFG_MODEL_LIBRARY_DEBUG      bfgModel_d)
	_FIND_BFG_LIBRARY (BFG_NETWORK_LIBRARY          bfgNetwork)
	_FIND_BFG_LIBRARY (BFG_NETWORK_LIBRARY_DEBUG    bfgNetwork_d)
	_FIND_BFG_LIBRARY (BFG_PHYSICS_LIBRARY          bfgPhysics)
	_FIND_BFG_LIBRARY (BFG_PHYSICS_LIBRARY_DEBUG    bfgPhysics_d)
	_FIND_BFG_LIBRARY (BFG_VIEW_LIBRARY             bfgView)
	_FIND_BFG_LIBRARY (BFG_VIEW_LIBRARY_DEBUG       bfgView_d)

	INCLUDE(FindPackageHandleStandardArgs)

	FIND_PACKAGE_HANDLE_STANDARD_ARGS(Bfg_Release DEFAULT_MSG
		BFG_AUDIO_LIBRARY
		BFG_BASE_LIBRARY
		BFG_CONTROLLER_LIBRARY
		BFG_CORE_LIBRARY
		BFG_EVENTCORE_LIBRARY
		BFG_MODEL_LIBRARY
		BFG_NETWORK_LIBRARY
		BFG_PHYSICS_LIBRARY
		BFG_VIEW_LIBRARY
	)

	FIND_PACKAGE_HANDLE_STANDARD_ARGS(Bfg_Debug DEFAULT_MSG
		BFG_AUDIO_LIBRARY_DEBUG
		BFG_BASE_LIBRARY_DEBUG
		BFG_CONTROLLER_LIBRARY_DEBUG
		BFG_CORE_LIBRARY_DEBUG
		BFG_EVENTCORE_LIBRARY_DEBUG
		BFG_MODEL_LIBRARY_DEBUG
		BFG_NETWORK_LIBRARY_DEBUG
		BFG_PHYSICS_LIBRARY_DEBUG
		BFG_VIEW_LIBRARY_DEBUG
	)

	IF (BFG_RELEASE_FOUND)
		LIST (APPEND BFG_LIBRARIES optimized ${BFG_AUDIO_LIBRARY})
		LIST (APPEND BFG_LIBRARIES optimized ${BFG_BASE_LIBRARY})
		LIST (APPEND BFG_LIBRARIES optimized ${BFG_CONTROLLER_LIBRARY})
		LIST (APPEND BFG_LIBRARIES optimized ${BFG_CORE_LIBRARY})
		LIST (APPEND BFG_LIBRARIES optimized ${BFG_EVENTCORE_LIBRARY})
		LIST (APPEND BFG_LIBRARIES optimized ${BFG_MODEL_LIBRARY})
		LIST (APPEND BFG_LIBRARIES optimized ${BFG_NETWORK_LIBRARY})
		LIST (APPEND BFG_LIBRARIES optimized ${BFG_PHYSICS_LIBRARY})
		LIST (APPEND BFG_LIBRARIES optimized ${BFG_VIEW_LIBRARY})
	
		#MESSAGE(STATUS "Found Bfg-Release: ${BFG_INCLUDE_DIR}, ${BFG_LIBRARIES}")
	ELSE ()
		#MESSAGE(STATUS "Bfg-Release not found.")
	ENDIF ()
	
	IF (BFG_DEBUG_FOUND)
		LIST (APPEND BFG_LIBRARIES_DEBUG debug ${BFG_AUDIO_LIBRARY_DEBUG})
		LIST (APPEND BFG_LIBRARIES_DEBUG debug ${BFG_BASE_LIBRARY_DEBUG})
		LIST (APPEND BFG_LIBRARIES_DEBUG debug ${BFG_CONTROLLER_LIBRARY_DEBUG})
		LIST (APPEND BFG_LIBRARIES_DEBUG debug ${BFG_CORE_LIBRARY_DEBUG})
		LIST (APPEND BFG_LIBRARIES_DEBUG debug ${BFG_EVENTCORE_LIBRARY_DEBUG})
		LIST (APPEND BFG_LIBRARIES_DEBUG debug ${BFG_MODEL_LIBRARY_DEBUG})
		LIST (APPEND BFG_LIBRARIES_DEBUG debug ${BFG_NETWORK_LIBRARY_DEBUG})
		LIST (APPEND BFG_LIBRARIES_DEBUG debug ${BFG_PHYSICS_LIBRARY_DEBUG})
		LIST (APPEND BFG_LIBRARIES_DEBUG debug ${BFG_VIEW_LIBRARY_DEBUG})
	
		#MESSAGE(STATUS "Found Bfg-Debug: ${BFG_INCLUDE_DIR}, ${BFG_LIBRARIES_DEBUG}")
		LIST (APPEND BFG_LIBRARIES debug ${BFG_LIBRARIES_DEBUG})
	ELSE ()
		#MESSAGE(STATUS "Bfg-Debug not found.")
	ENDIF ()
	
	MARK_AS_ADVANCED(BFG_INCLUDE_DIR BFG_LIBRARIES)
ENDIF ()
